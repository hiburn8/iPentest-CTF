//
//  FirstViewController.m
//  iPentestCTF
//
//  Created by Daniel on 16/03/2015.
//  Copyright (c) 2015 Daniel Reece. All rights reserved.
//

#import "ScoreboardViewController.h"
#import "SimpleTableCell.h"

@interface ScoreboardViewController ()

@end

@implementation ScoreboardViewController
{
    //NSArray *position;
    NSArray *users;
    NSArray *flags;
    NSArray *points;
    NSArray *thumbnails;
}

- (void)getScoreboard{
    
    
    
    NSString * element = @"scoreboard";
    NSString *barcodeURL = [[NSString alloc] initWithFormat:@"http://hiburn8.org/ctf/api.php?%@", element];
    
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc]
                                    initWithURL:[NSURL URLWithString:barcodeURL]];
    [request setHTTPMethod:@"GET"];
    
    
    //  [[NSURLConnection alloc] initWithRequest:request delegate:self];
    NSHTTPURLResponse *response = nil;
    NSError *error = nil;
    NSData *respData = [NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
    NSString *JSONDataStr = [[NSString alloc] initWithData:respData encoding:NSUTF8StringEncoding];
    //NSDictionary *headerFields = [(NSHTTPURLResponse *)response allHeaderFields];
    
    //  for(NSString *key in [headerFields allKeys]) {
    //      NSLog(@"%@:%@",key, [headerFields objectForKey:key]);
    //  }
    
    //NSLog(@"~~~~~ Status code: %d - %@", [response statusCode], JSONDataStr);
    
    
    
    //
    //save JSONDataStr to plist
    //
    
    // Table data looks like this
    //NSString * str = @"[{\"username\":\"daniel\",\"flags\":\"2\",\"sumDifficulty\":\"60\"},{\"username\":\"alexios\",\"flags\":\"1\",\"sumDifficulty\":\"50\"},{\"username\":\"guga\",\"flags\":\"1\",\"sumDifficulty\":\"50\"},{\"username\":\"tom\",\"flags\":\"1\",\"sumDifficulty\":\"10\"}]";
    
    NSData *jsonData = [JSONDataStr dataUsingEncoding:NSUTF8StringEncoding];
    
    
    NSArray *result = [NSJSONSerialization JSONObjectWithData:jsonData options:0 error:nil];
    
    users = [result valueForKey:@"username"];
    flags = [result valueForKey:@"flags"];
    points = [result valueForKey:@"sumDifficulty"];
    
    
    //NSLog(@"%@",JSONDataStr);
    //NSLog(@"%@",points);
    
    //      Find out the path of scores
          NSString *path = [[NSBundle mainBundle] pathForResource:@"data" ofType:@"plist"];
    NSLog(path);
    
    //      Load the file content and read the data into arrays
          NSDictionary *dict = [[NSDictionary alloc] initWithContentsOfFile:path];
          thumbnails = [dict objectForKey:@"scores"];
    
}

- (NSArray *)getaUsersLabs:(NSString *)theUser{
    
    NSString *apiURL = [[NSString alloc] initWithFormat:@"http://hiburn8.org/ctf/api.php?allpwns"];
    
    NSMutableURLRequest *request = [[NSMutableURLRequest alloc]
                                    initWithURL:[NSURL URLWithString:apiURL]];
    [request setHTTPMethod:@"GET"];
    
    //  [[NSURLConnection alloc] initWithRequest:request delegate:self];
    NSHTTPURLResponse *response = nil;
    NSError *error = nil;
    NSData *respData = [NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
    NSString *JSONDataStr = [[NSString alloc] initWithData:respData encoding:NSUTF8StringEncoding];
    //NSDictionary *headerFields = [(NSHTTPURLResponse *)response allHeaderFields];
    
    NSData *jsonData = [JSONDataStr dataUsingEncoding:NSUTF8StringEncoding];
    
    NSArray *result = [NSJSONSerialization JSONObjectWithData:jsonData options:0 error:nil];
    
    NSMutableArray *allLabs = [NSMutableArray array];
    for (NSString *tempObject in result) {
        if ([[tempObject valueForKey:@"username"] isEqual:theUser]){
            //NSLog(@"Single element: %@", [tempObject valueForKey:@"labname"]);
        
            NSString * aLab = [tempObject valueForKey:@"labname"];
            [allLabs addObject:aLab];
            //NSLog(@"%@", allLabs);
        }
    }
    
    return allLabs;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    [self getScoreboard];
    
}
- (void) viewWillAppear:(BOOL)animated{
    [self getScoreboard];
    NSLog(@"%@ is King of the castle!",users[0]);
}
- (void) refresh:(BOOL)animated{
    [self.view setNeedsDisplay];
}


- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return (interfaceOrientation != UIInterfaceOrientationPortraitUpsideDown);
}

//all this method can go - used to display data error only
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    if (users) {
        [_tableHeader setText:@"Leaderboard"];
        tableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
        return 1;
        
    } else {
        
        // Display a message when the table is empty
        
        UILabel *messageLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height)];
        
        messageLabel.text = @"the CTF (or you) are offline.";
        messageLabel.textColor = [UIColor blackColor];
        messageLabel.numberOfLines = 0;
        messageLabel.textAlignment = NSTextAlignmentCenter;
        //messageLabel.font = [UIFont fontWithName:@"Palatino-Italic" size:20];
        
         [messageLabel sizeToFit];
         tableView.backgroundView = messageLabel;
        
        [_tableHeader setText:@"Error"];

        tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        
        
        //HORRID HAX
        /*UIRefreshControl *refreshControl = [[UIRefreshControl alloc] init];
        [refreshControl addTarget:self action:@selector(getScoreboard) forControlEvents:UIControlEventValueChanged];
        [tableView addSubview:refreshControl];
        refreshControl.tag = 99;
         */
        
    }
    
    return 0;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [users count];
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 78;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    NSInteger rowIndex = indexPath.row;
    NSInteger rowCount = [tableView numberOfRowsInSection:0];
    
    static NSString *simpleTableIdentifier = @"SimpleTableCell";
    
    SimpleTableCell *cell = (SimpleTableCell *)[tableView dequeueReusableCellWithIdentifier:simpleTableIdentifier];
    if (cell == nil)
    {
        NSArray *nib = [[NSBundle mainBundle] loadNibNamed:@"SimpleTableCell" owner:self options:nil];
        cell = [nib objectAtIndex:0];
    }
    
    cell.nameLabel.text = [users objectAtIndex:rowIndex];
    cell.flagsLabel.text = [flags objectAtIndex:rowIndex];
    cell.pointsLabel.text = [points objectAtIndex:rowIndex];
    
    //cell.thumbnailImageView.image = [UIImage imageNamed:[thumbnails objectAtIndex:indexPath.row]];
    
    if (rowIndex == 0){
        cell.thumbnailImageView.image = [UIImage imageNamed:@"award_star_gold_1.png"];
        cell.positionNumberLabel.text = [NSString stringWithFormat:@"%ldst",rowIndex+1];
    }
    else if (rowIndex == 1){
        cell.thumbnailImageView.image = [UIImage imageNamed:@"award_star_silver_2"];
        cell.positionNumberLabel.text = [NSString stringWithFormat:@"%ldnd",rowIndex+1];
    }
    
    else if (rowIndex == 2){
        cell.thumbnailImageView.image = [UIImage imageNamed:@"award_star_bronze_3"];
        cell.positionNumberLabel.text = [NSString stringWithFormat:@"%ldrd",rowIndex+1];
    }
    else if (rowIndex == rowCount - 1){
        cell.thumbnailImageView.image = [UIImage imageNamed:@"poor.png"];
        cell.positionNumberLabel.text = [NSString stringWithFormat:@"last"];
    }
    else {
        cell.positionNumberLabel.text = [NSString stringWithFormat:@"%ldth",rowIndex+1];
    }
    
    return cell;
}



- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    NSArray * hisLabs = [self getaUsersLabs:([users objectAtIndex:indexPath.row])];
    
    
    NSString *titleString = @"error";
    NSString * hisLabsString = @"";
    
    if (hisLabs != nil){
    hisLabsString = [hisLabs componentsJoinedByString:@"\n"];
    titleString = [NSString stringWithFormat:@"%@ has completed:",[users objectAtIndex:indexPath.row]];
    }

    UIAlertView *messageAlert = [[UIAlertView alloc]
                                 initWithTitle:titleString message:hisLabsString delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
    
    // Display the Hello World Message
    [messageAlert show];
    
    // Checked the selected row
    //UITableViewCell *cell = [tableView cellForRowAtIndexPath:indexPath];
    //cell.accessoryType = UITableViewCellAccessoryCheckmark;
    
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}

/*
- (NSIndexPath *)tableView:(UITableView *)tableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSLog(@"willSelectRowAtIndexPath");
    return indexPath;
}
*/
@end

